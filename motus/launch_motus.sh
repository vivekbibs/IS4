#!/bin/bash
#SBATCH --job-name=motus_full_taxons
#SBATCH --mem=150GB
#SBATCH --cpus-per-task=10
#SBATCH -o slurm.%x.%j.out  # STDOUT file with the Job Name and the Job ID
#SBATCH -e slurm.%x.%j.err  # STDERR file with the Job Name and the Job ID
# Activer l'environnement Conda 
source /shared/projects/mudis4ls_is4_benchmark/miniforge3/bin/activate /shared/projects/mudis4ls_is4_benchmark/conda/envs/motus

# Définir les variables

fastq_dir="/shared/projects/mudis4ls_is4_benchmark/test_data_meteor/only_one/fastq/"
fastq_file="ERS12377136.fastq.gz"
name="${fastq_file%.fastq.gz}"

fastq_file_path="${fastq_dir}${fastq_file}"

# Définir le répertoire de sortie
output_dir="/shared/projects/mudis4ls_is4_benchmark/test_results/motus"
mkdir -p $output_dir

# Exécuter motus 
motus profile -s $fastq_file_path -n $name -t ${SLURM_CPUS_PER_TASK} -A > "$output_dir/results.txt" 2> "$output_dir/log.txt"

# With -k is possible to change the taxonomy level. For example, the result of motus profile -s test1_single.fastq -n test3 -k class is:

# With -p you add the NCBI taxonomy id to the profile. Hence you will have 3 columns now, where the second one is the NCBI id.

# With -q you can print the full rank taxonomy (up to the one selected with -k)

# With -A is possible to print all levels together.
# Total time: 37.58 s
#Input options:
#    -f  FILE[,FILE]  input file(s) for reads in forward orientation, fastq(.gz)-formatted
#    -r  FILE[,FILE]  input file(s) for reads in reverse orientation, fastq(.gz)-formatted
#    -s  FILE[,FILE]  input file(s) for unpaired reads, fastq(.gz)-formatted
#    -n  STR          sample name ['unnamed sample']
#    -i  FILE[,FILE]  provide SAM or BAM input file(s)  (generated by motus map_tax)
#    -m  FILE         provide a mgc reads count file (generated by motus calc_mgc)
#    -db DIR          provide a different database directory

# Output options:
#    -o  FILE         output file name [stdout]
#    -I  FILE         save the result of BWA in BAM format (output of motus map_tax)
#    -M  FILE         save the mgc reads count (output of motus calc_mgc)
#    -e               only species with reference genomes (ref-mOTUs)
#    -u               print the full name of the species
#    -c               print result as counts instead of relative abundances
#    -p               print NCBI taxonomy identifiers
#    -B               print result in BIOM format
#    -C  STR          print result in CAMI format (BioBoxes format 0.9.1)
#                     Values: [precision, recall, parenthesis]
#    -q               print the full rank taxonomy
#    -A               print all taxonomic levels together (kingdom to mOTUs, override -k)
#    -k  STR          taxonomic level [mOTU]
#                     Values: [kingdom, phylum, class, order, family, genus, mOTU]

# Algorithm options:
#    -g  INT          number of marker genes cutoff: 1=higher recall, 6=higher precision [3]
#    -l  INT          min length of the alignment (bp) [75]
#    -t  INT          number of threads [1]
#    -v  INT          verbosity level: 1=error, 2=warning, 3=message, 4+=debugging [3]
#    -y  STR          type of read counts [insert.scaled_counts]
#                     Values: [base.coverage, insert.raw_counts, insert.scaled_counts]